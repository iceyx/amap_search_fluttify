//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package me.yohom.amap_search_fluttify.sub_handler;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.platform.PlatformViewRegistry;

import me.yohom.amap_search_fluttify.AmapSearchFluttifyPlugin.Handler;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class SubHandler12 {
    public static Map<String, Handler> getSubHandler(BinaryMessenger messenger) {
        return new HashMap<String, Handler>() {{
            put("RefClass::isKindOfcom_amap_api_services_busline_BusLineQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.busline.BusLineQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_busline_BusLineResult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.busline.BusLineResult);
            });
            put("RefClass::isKindOfcom_amap_api_services_busline_BusStationItem", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.busline.BusStationItem);
            });
            put("RefClass::isKindOfcom_amap_api_services_busline_BusStationQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.busline.BusStationQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_core_AMapException", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.core.AMapException);
            });
            put("RefClass::isKindOfcom_amap_api_services_core_ServiceSettings", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.core.ServiceSettings);
            });
            put("RefClass::isKindOfcom_amap_api_services_core_SearchUtils", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.core.SearchUtils);
            });
            put("RefClass::isKindOfcom_amap_api_services_core_LatLonSharePoint", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.core.LatLonSharePoint);
            });
            put("RefClass::isKindOfcom_amap_api_services_core_LatLonPoint", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.core.LatLonPoint);
            });
            put("RefClass::isKindOfcom_amap_api_services_core_PoiItem", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.core.PoiItem);
            });
            put("RefClass::isKindOfcom_amap_api_services_core_SuggestionCity", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.core.SuggestionCity);
            });
            put("RefClass::isKindOfcom_amap_api_services_poisearch_Photo", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.poisearch.Photo);
            });
            put("RefClass::isKindOfcom_amap_api_services_poisearch_SubPoiItem", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.poisearch.SubPoiItem);
            });
            put("RefClass::isKindOfcom_amap_api_services_poisearch_PoiItemExtension", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.poisearch.PoiItemExtension);
            });
            put("RefClass::isKindOfcom_amap_api_services_poisearch_PoiSearch_SearchBound", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.poisearch.PoiSearch.SearchBound);
            });
            put("RefClass::isKindOfcom_amap_api_services_poisearch_PoiResult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.poisearch.PoiResult);
            });
            put("RefClass::isKindOfcom_amap_api_services_poisearch_PoiSearch", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.poisearch.PoiSearch);
            });
            put("RefClass::isKindOfcom_amap_api_services_poisearch_PoiSearch_Query", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.poisearch.PoiSearch.Query);
            });
            put("RefClass::isKindOfcom_amap_api_services_poisearch_IndoorData", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.poisearch.IndoorData);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_Railway", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.Railway);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_BusPath", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.BusPath);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_DriveRoutePlanResult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.DriveRoutePlanResult);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RouteSearch_TruckRouteQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RouteSearch.TruckRouteQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_TMC", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.TMC);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RouteBusWalkItem", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RouteBusWalkItem);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RouteResult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RouteResult);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RouteSearch", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RouteSearch);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_BusStep", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.BusStep);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_TaxiItem", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.TaxiItem);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_BusRouteResult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.BusRouteResult);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RoutePlanResult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RoutePlanResult);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RailwaySpace", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RailwaySpace);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_TruckRouteRestult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.TruckRouteRestult);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RouteSearch_RideRouteQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RouteSearch.RideRouteQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RouteSearch_DriveRouteQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RouteSearch.DriveRouteQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RouteRailwayItem", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RouteRailwayItem);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_WalkStep", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.WalkStep);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RailwayStationItem", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RailwayStationItem);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RideRouteResult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RideRouteResult);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RouteSearch_FromAndTo", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RouteSearch.FromAndTo);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RidePath", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RidePath);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RouteSearch_BusRouteQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RouteSearch.BusRouteQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RideStep", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RideStep);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RouteSearchCity", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RouteSearchCity);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_DistanceResult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.DistanceResult);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RouteSearch_WalkRouteQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RouteSearch.WalkRouteQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_District", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.District);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_WalkRouteResult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.WalkRouteResult);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_DistanceSearch_DistanceQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.DistanceSearch.DistanceQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_SearchCity", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.SearchCity);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_DistanceSearch", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.DistanceSearch);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_WalkPath", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.WalkPath);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RouteBusLineItem", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RouteBusLineItem);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_RouteSearch_DrivePlanQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.RouteSearch.DrivePlanQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_DrivePlanStep", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.DrivePlanStep);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_TimeInfo", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.TimeInfo);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_DriveStep", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.DriveStep);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_TruckStep", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.TruckStep);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_DriveRouteResult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.DriveRouteResult);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_DrivePath", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.DrivePath);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_TruckPath", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.TruckPath);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_Doorway", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.Doorway);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_DrivePlanPath", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.DrivePlanPath);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_TimeInfosElement", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.TimeInfosElement);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_DistanceItem", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.DistanceItem);
            });
            put("RefClass::isKindOfcom_amap_api_services_route_Path", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.route.Path);
            });
            put("RefClass::isKindOfcom_amap_api_services_road_Road", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.road.Road);
            });
            put("RefClass::isKindOfcom_amap_api_services_road_Crossroad", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.road.Crossroad);
            });
            put("RefClass::isKindOfcom_amap_api_services_nearby_NearbyInfo", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.nearby.NearbyInfo);
            });
            put("RefClass::isKindOfcom_amap_api_services_nearby_UploadInfo", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.nearby.UploadInfo);
            });
            put("RefClass::isKindOfcom_amap_api_services_nearby_NearbySearch", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.nearby.NearbySearch);
            });
            put("RefClass::isKindOfcom_amap_api_services_nearby_NearbySearchResult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.nearby.NearbySearchResult);
            });
            put("RefClass::isKindOfcom_amap_api_services_nearby_NearbySearch_NearbyQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.nearby.NearbySearch.NearbyQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_routepoisearch_RoutePOIItem", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.routepoisearch.RoutePOIItem);
            });
            put("RefClass::isKindOfcom_amap_api_services_routepoisearch_RoutePOISearch", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.routepoisearch.RoutePOISearch);
            });
            put("RefClass::isKindOfcom_amap_api_services_routepoisearch_RoutePOISearchResult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.routepoisearch.RoutePOISearchResult);
            });
            put("RefClass::isKindOfcom_amap_api_services_routepoisearch_RoutePOISearchQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.routepoisearch.RoutePOISearchQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_cloud_CloudItem", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.cloud.CloudItem);
            });
            put("RefClass::isKindOfcom_amap_api_services_cloud_CloudSearch_Query", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.cloud.CloudSearch.Query);
            });
            put("RefClass::isKindOfcom_amap_api_services_cloud_CloudResult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.cloud.CloudResult);
            });
            put("RefClass::isKindOfcom_amap_api_services_cloud_CloudSearch", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.cloud.CloudSearch);
            });
            put("RefClass::isKindOfcom_amap_api_services_cloud_CloudSearch_SearchBound", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.cloud.CloudSearch.SearchBound);
            });
            put("RefClass::isKindOfcom_amap_api_services_cloud_CloudImage", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.cloud.CloudImage);
            });
            put("RefClass::isKindOfcom_amap_api_services_cloud_CloudSearch_Sortingrules", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.cloud.CloudSearch.Sortingrules);
            });
            put("RefClass::isKindOfcom_amap_api_services_cloud_CloudItemDetail", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.cloud.CloudItemDetail);
            });
            put("RefClass::isKindOfcom_amap_api_services_weather_LocalDayWeatherForecast", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.weather.LocalDayWeatherForecast);
            });
            put("RefClass::isKindOfcom_amap_api_services_weather_WeatherSearchQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.weather.WeatherSearchQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_weather_LocalWeatherForecastResult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.weather.LocalWeatherForecastResult);
            });
            put("RefClass::isKindOfcom_amap_api_services_weather_LocalWeatherForecast", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.weather.LocalWeatherForecast);
            });
            put("RefClass::isKindOfcom_amap_api_services_weather_WeatherSearch", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.weather.WeatherSearch);
            });
            put("RefClass::isKindOfcom_amap_api_services_weather_LocalWeatherLive", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.weather.LocalWeatherLive);
            });
            put("RefClass::isKindOfcom_amap_api_services_weather_LocalWeatherLiveResult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.weather.LocalWeatherLiveResult);
            });
            put("RefClass::isKindOfcom_amap_api_services_geocoder_BusinessArea", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.geocoder.BusinessArea);
            });
            put("RefClass::isKindOfcom_amap_api_services_geocoder_GeocodeQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.geocoder.GeocodeQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_geocoder_GeocodeSearch", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.geocoder.GeocodeSearch);
            });
            put("RefClass::isKindOfcom_amap_api_services_geocoder_RegeocodeResult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.geocoder.RegeocodeResult);
            });
            put("RefClass::isKindOfcom_amap_api_services_geocoder_GeocodeResult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.geocoder.GeocodeResult);
            });
            put("RefClass::isKindOfcom_amap_api_services_geocoder_AoiItem", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.geocoder.AoiItem);
            });
            put("RefClass::isKindOfcom_amap_api_services_geocoder_RegeocodeRoad", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.geocoder.RegeocodeRoad);
            });
            put("RefClass::isKindOfcom_amap_api_services_geocoder_GeocodeAddress", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.geocoder.GeocodeAddress);
            });
            put("RefClass::isKindOfcom_amap_api_services_geocoder_RegeocodeQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.geocoder.RegeocodeQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_geocoder_StreetNumber", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.geocoder.StreetNumber);
            });
            put("RefClass::isKindOfcom_amap_api_services_geocoder_RegeocodeAddress", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.geocoder.RegeocodeAddress);
            });
            put("RefClass::isKindOfcom_amap_api_services_district_DistrictSearchQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.district.DistrictSearchQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_district_DistrictSearch", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.district.DistrictSearch);
            });
            put("RefClass::isKindOfcom_amap_api_services_district_DistrictResult", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.district.DistrictResult);
            });
            put("RefClass::isKindOfcom_amap_api_services_district_DistrictItem", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.district.DistrictItem);
            });
            put("RefClass::isKindOfcom_amap_api_services_help_Tip", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.help.Tip);
            });
            put("RefClass::isKindOfcom_amap_api_services_help_InputtipsQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.help.InputtipsQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_help_Inputtips", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.help.Inputtips);
            });
            put("RefClass::isKindOfcom_amap_api_services_share_ShareSearch_ShareNaviQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.share.ShareSearch.ShareNaviQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_share_ShareSearch_ShareBusRouteQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.share.ShareSearch.ShareBusRouteQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_share_ShareSearch", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.share.ShareSearch);
            });
            put("RefClass::isKindOfcom_amap_api_services_share_ShareSearch_ShareFromAndTo", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.share.ShareSearch.ShareFromAndTo);
            });
            put("RefClass::isKindOfcom_amap_api_services_share_ShareSearch_ShareWalkRouteQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery);
            });
            put("RefClass::isKindOfcom_amap_api_services_share_ShareSearch_ShareDrivingRouteQuery", (__args__, __methodResult__) -> {
                // 引用对象
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                Object ref = getHEAP().get(refId);
            
                __methodResult__.success(ref instanceof com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery);
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_traffic_TrafficStatusInfo__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_traffic_TrafficStatusInfo__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.traffic.TrafficStatusInfo __obj__ = new com.amap.api.services.traffic.TrafficStatusInfo();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_traffic_TrafficStatusResult__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_traffic_TrafficStatusResult__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.traffic.TrafficStatusResult __obj__ = new com.amap.api.services.traffic.TrafficStatusResult();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_traffic_TrafficSearch__android_content_Context", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_traffic_TrafficSearch__android_content_Context");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1__ != null ? (android.content.Context) getHEAP().get(__var1__) : null;
            
                // create target object
                com.amap.api.services.traffic.TrafficSearch __obj__ = new com.amap.api.services.traffic.TrafficSearch(var1);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_traffic_RoadTrafficQuery__String__String__int", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_traffic_RoadTrafficQuery__String__String__int");
                }
            
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
            
                // create target object
                com.amap.api.services.traffic.RoadTrafficQuery __obj__ = new com.amap.api.services.traffic.RoadTrafficQuery(var1, var2, var3);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_traffic_CircleTrafficQuery__com_amap_api_services_core_LatLonPoint__int__int", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_traffic_CircleTrafficQuery__com_amap_api_services_core_LatLonPoint__int__int");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.services.core.LatLonPoint var1 = __var1__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var1__) : null;
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
            
                // create target object
                com.amap.api.services.traffic.CircleTrafficQuery __obj__ = new com.amap.api.services.traffic.CircleTrafficQuery(var1, var2, var3);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_traffic_TrafficStatusEvaluation__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_traffic_TrafficStatusEvaluation__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.traffic.TrafficStatusEvaluation __obj__ = new com.amap.api.services.traffic.TrafficStatusEvaluation();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_busline_BusLineItem__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_busline_BusLineItem__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.busline.BusLineItem __obj__ = new com.amap.api.services.busline.BusLineItem();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_busline_BusStationSearch__android_content_Context__com_amap_api_services_busline_BusStationQuery", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_busline_BusStationSearch__android_content_Context__com_amap_api_services_busline_BusStationQuery");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1__ != null ? (android.content.Context) getHEAP().get(__var1__) : null;
                // ref arg
                Integer __var2__ = (Integer) ((Map<String, Object>) __args__).get("var2");
                com.amap.api.services.busline.BusStationQuery var2 = __var2__ != null ? (com.amap.api.services.busline.BusStationQuery) getHEAP().get(__var2__) : null;
            
                // create target object
                com.amap.api.services.busline.BusStationSearch __obj__ = new com.amap.api.services.busline.BusStationSearch(var1, var2);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_busline_BusLineSearch__android_content_Context__com_amap_api_services_busline_BusLineQuery", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_busline_BusLineSearch__android_content_Context__com_amap_api_services_busline_BusLineQuery");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1__ != null ? (android.content.Context) getHEAP().get(__var1__) : null;
                // ref arg
                Integer __var2__ = (Integer) ((Map<String, Object>) __args__).get("var2");
                com.amap.api.services.busline.BusLineQuery var2 = __var2__ != null ? (com.amap.api.services.busline.BusLineQuery) getHEAP().get(__var2__) : null;
            
                // create target object
                com.amap.api.services.busline.BusLineSearch __obj__ = new com.amap.api.services.busline.BusLineSearch(var1, var2);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_busline_BusLineQuery__String__com_amap_api_services_busline_BusLineQuery_SearchType__String", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_busline_BusLineQuery__String__com_amap_api_services_busline_BusLineQuery_SearchType__String");
                }
            
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // enum arg
                com.amap.api.services.busline.BusLineQuery.SearchType var2 = com.amap.api.services.busline.BusLineQuery.SearchType.values()[(int) ((Map<String, Object>) __args__).get("var2")];
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) __args__).get("var3");
            
                // create target object
                com.amap.api.services.busline.BusLineQuery __obj__ = new com.amap.api.services.busline.BusLineQuery(var1, var2, var3);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_busline_BusStationItem__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_busline_BusStationItem__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.busline.BusStationItem __obj__ = new com.amap.api.services.busline.BusStationItem();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_busline_BusStationQuery__String__String", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_busline_BusStationQuery__String__String");
                }
            
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
            
                // create target object
                com.amap.api.services.busline.BusStationQuery __obj__ = new com.amap.api.services.busline.BusStationQuery(var1, var2);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_core_AMapException__String", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_core_AMapException__String");
                }
            
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // create target object
                com.amap.api.services.core.AMapException __obj__ = new com.amap.api.services.core.AMapException(var1);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_core_AMapException__String__int__String", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_core_AMapException__String__int__String");
                }
            
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) __args__).get("var3");
            
                // create target object
                com.amap.api.services.core.AMapException __obj__ = new com.amap.api.services.core.AMapException(var1, var2, var3);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_core_AMapException__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_core_AMapException__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.core.AMapException __obj__ = new com.amap.api.services.core.AMapException();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_core_SearchUtils__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_core_SearchUtils__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.core.SearchUtils __obj__ = new com.amap.api.services.core.SearchUtils();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_core_LatLonSharePoint__double__double__String", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_core_LatLonSharePoint__double__double__String");
                }
            
                // args
                // jsonable arg
                double var1 = (double) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                double var3 = (double) ((Map<String, Object>) __args__).get("var3");
                // jsonable arg
                String var5 = (String) ((Map<String, Object>) __args__).get("var5");
            
                // create target object
                com.amap.api.services.core.LatLonSharePoint __obj__ = new com.amap.api.services.core.LatLonSharePoint(var1, var3, var5);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_core_LatLonPoint__double__double", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_core_LatLonPoint__double__double");
                }
            
                // args
                // jsonable arg
                double var1 = (double) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                double var3 = (double) ((Map<String, Object>) __args__).get("var3");
            
                // create target object
                com.amap.api.services.core.LatLonPoint __obj__ = new com.amap.api.services.core.LatLonPoint(var1, var3);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_core_PoiItem__String__com_amap_api_services_core_LatLonPoint__String__String", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_core_PoiItem__String__com_amap_api_services_core_LatLonPoint__String__String");
                }
            
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                Integer __var2__ = (Integer) ((Map<String, Object>) __args__).get("var2");
                com.amap.api.services.core.LatLonPoint var2 = __var2__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var2__) : null;
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) __args__).get("var3");
                // jsonable arg
                String var4 = (String) ((Map<String, Object>) __args__).get("var4");
            
                // create target object
                com.amap.api.services.core.PoiItem __obj__ = new com.amap.api.services.core.PoiItem(var1, var2, var3, var4);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_core_SuggestionCity__String__String__String__int", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_core_SuggestionCity__String__String__String__int");
                }
            
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) __args__).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) __args__).get("var4");
            
                // create target object
                com.amap.api.services.core.SuggestionCity __obj__ = new com.amap.api.services.core.SuggestionCity(var1, var2, var3, var4);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_poisearch_Photo__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_Photo__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.poisearch.Photo __obj__ = new com.amap.api.services.poisearch.Photo();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_poisearch_Photo__String__String", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_Photo__String__String");
                }
            
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
            
                // create target object
                com.amap.api.services.poisearch.Photo __obj__ = new com.amap.api.services.poisearch.Photo(var1, var2);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_poisearch_SubPoiItem__String__com_amap_api_services_core_LatLonPoint__String__String", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_SubPoiItem__String__com_amap_api_services_core_LatLonPoint__String__String");
                }
            
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                Integer __var2__ = (Integer) ((Map<String, Object>) __args__).get("var2");
                com.amap.api.services.core.LatLonPoint var2 = __var2__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var2__) : null;
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) __args__).get("var3");
                // jsonable arg
                String var4 = (String) ((Map<String, Object>) __args__).get("var4");
            
                // create target object
                com.amap.api.services.poisearch.SubPoiItem __obj__ = new com.amap.api.services.poisearch.SubPoiItem(var1, var2, var3, var4);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_poisearch_PoiItemExtension__String__String", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_PoiItemExtension__String__String");
                }
            
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
            
                // create target object
                com.amap.api.services.poisearch.PoiItemExtension __obj__ = new com.amap.api.services.poisearch.PoiItemExtension(var1, var2);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_poisearch_PoiSearch_SearchBound__com_amap_api_services_core_LatLonPoint__int", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_PoiSearch_SearchBound__com_amap_api_services_core_LatLonPoint__int");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.services.core.LatLonPoint var1 = __var1__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var1__) : null;
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
            
                // create target object
                com.amap.api.services.poisearch.PoiSearch.SearchBound __obj__ = new com.amap.api.services.poisearch.PoiSearch.SearchBound(var1, var2);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_poisearch_PoiSearch_SearchBound__com_amap_api_services_core_LatLonPoint__int__boolean", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_PoiSearch_SearchBound__com_amap_api_services_core_LatLonPoint__int__boolean");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.services.core.LatLonPoint var1 = __var1__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var1__) : null;
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                boolean var3 = (boolean) ((Map<String, Object>) __args__).get("var3");
            
                // create target object
                com.amap.api.services.poisearch.PoiSearch.SearchBound __obj__ = new com.amap.api.services.poisearch.PoiSearch.SearchBound(var1, var2, var3);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_poisearch_PoiSearch_SearchBound__com_amap_api_services_core_LatLonPoint__com_amap_api_services_core_LatLonPoint", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_PoiSearch_SearchBound__com_amap_api_services_core_LatLonPoint__com_amap_api_services_core_LatLonPoint");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.services.core.LatLonPoint var1 = __var1__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var1__) : null;
                // ref arg
                Integer __var2__ = (Integer) ((Map<String, Object>) __args__).get("var2");
                com.amap.api.services.core.LatLonPoint var2 = __var2__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var2__) : null;
            
                // create target object
                com.amap.api.services.poisearch.PoiSearch.SearchBound __obj__ = new com.amap.api.services.poisearch.PoiSearch.SearchBound(var1, var2);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_poisearch_PoiSearch_SearchBound__java_util_List_com_amap_api_services_core_LatLonPoint_", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_PoiSearch_SearchBound__java_util_List_com_amap_api_services_core_LatLonPoint_");
                }
            
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                java.util.List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    ((ArrayList<com.amap.api.services.core.LatLonPoint>) var1).add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
                }
            
                // create target object
                com.amap.api.services.poisearch.PoiSearch.SearchBound __obj__ = new com.amap.api.services.poisearch.PoiSearch.SearchBound((ArrayList) var1);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_poisearch_PoiSearch__android_content_Context__com_amap_api_services_poisearch_PoiSearch_Query", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_PoiSearch__android_content_Context__com_amap_api_services_poisearch_PoiSearch_Query");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1__ != null ? (android.content.Context) getHEAP().get(__var1__) : null;
                // ref arg
                Integer __var2__ = (Integer) ((Map<String, Object>) __args__).get("var2");
                com.amap.api.services.poisearch.PoiSearch.Query var2 = __var2__ != null ? (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(__var2__) : null;
            
                // create target object
                com.amap.api.services.poisearch.PoiSearch __obj__ = new com.amap.api.services.poisearch.PoiSearch(var1, var2);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_poisearch_PoiSearch_Query__String__String", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_PoiSearch_Query__String__String");
                }
            
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
            
                // create target object
                com.amap.api.services.poisearch.PoiSearch.Query __obj__ = new com.amap.api.services.poisearch.PoiSearch.Query(var1, var2);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_poisearch_PoiSearch_Query__String__String__String", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_PoiSearch_Query__String__String__String");
                }
            
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) __args__).get("var3");
            
                // create target object
                com.amap.api.services.poisearch.PoiSearch.Query __obj__ = new com.amap.api.services.poisearch.PoiSearch.Query(var1, var2, var3);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_poisearch_IndoorData__String__int__String", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_IndoorData__String__int__String");
                }
            
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) __args__).get("var3");
            
                // create target object
                com.amap.api.services.poisearch.IndoorData __obj__ = new com.amap.api.services.poisearch.IndoorData(var1, var2, var3);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_Railway__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_Railway__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.Railway __obj__ = new com.amap.api.services.route.Railway();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_BusPath__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_BusPath__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.BusPath __obj__ = new com.amap.api.services.route.BusPath();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_DriveRoutePlanResult__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DriveRoutePlanResult__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.DriveRoutePlanResult __obj__ = new com.amap.api.services.route.DriveRoutePlanResult();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_TruckRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int__java_util_List_com_amap_api_services_core_LatLonPoint___int", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_TruckRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int__java_util_List_com_amap_api_services_core_LatLonPoint___int");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.services.route.RouteSearch.FromAndTo var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(__var1__) : null;
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // list arg
                List<Integer> var3RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var3");
                java.util.List<com.amap.api.services.core.LatLonPoint> var3 = new ArrayList<>();
                for (int refId : var3RefIdList) {
                    ((ArrayList<com.amap.api.services.core.LatLonPoint>) var3).add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
                }
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) __args__).get("var4");
            
                // create target object
                com.amap.api.services.route.RouteSearch.TruckRouteQuery __obj__ = new com.amap.api.services.route.RouteSearch.TruckRouteQuery(var1, var2, (ArrayList) var3, var4);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_TMC__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_TMC__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.TMC __obj__ = new com.amap.api.services.route.TMC();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteBusWalkItem__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteBusWalkItem__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.RouteBusWalkItem __obj__ = new com.amap.api.services.route.RouteBusWalkItem();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteResult__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteResult__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.RouteResult __obj__ = new com.amap.api.services.route.RouteResult();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteSearch__android_content_Context", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch__android_content_Context");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1__ != null ? (android.content.Context) getHEAP().get(__var1__) : null;
            
                // create target object
                com.amap.api.services.route.RouteSearch __obj__ = new com.amap.api.services.route.RouteSearch(var1);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_BusStep__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_BusStep__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.BusStep __obj__ = new com.amap.api.services.route.BusStep();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_TaxiItem__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_TaxiItem__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.TaxiItem __obj__ = new com.amap.api.services.route.TaxiItem();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_BusRouteResult__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_BusRouteResult__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.BusRouteResult __obj__ = new com.amap.api.services.route.BusRouteResult();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RoutePlanResult__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RoutePlanResult__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.RoutePlanResult __obj__ = new com.amap.api.services.route.RoutePlanResult();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RailwaySpace__String__float", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RailwaySpace__String__float");
                }
            
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                Double var2 = (Double) ((Map<String, Object>) __args__).get("var2");
            
                // create target object
                com.amap.api.services.route.RailwaySpace __obj__ = new com.amap.api.services.route.RailwaySpace(var1, new Double(var2).floatValue());
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_TruckRouteRestult__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_TruckRouteRestult__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.TruckRouteRestult __obj__ = new com.amap.api.services.route.TruckRouteRestult();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_RideRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_RideRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.services.route.RouteSearch.FromAndTo var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(__var1__) : null;
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
            
                // create target object
                com.amap.api.services.route.RouteSearch.RideRouteQuery __obj__ = new com.amap.api.services.route.RouteSearch.RideRouteQuery(var1, var2);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_RideRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_RideRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.services.route.RouteSearch.FromAndTo var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(__var1__) : null;
            
                // create target object
                com.amap.api.services.route.RouteSearch.RideRouteQuery __obj__ = new com.amap.api.services.route.RouteSearch.RideRouteQuery(var1);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_RideRouteQuery__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_RideRouteQuery__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.RouteSearch.RideRouteQuery __obj__ = new com.amap.api.services.route.RouteSearch.RideRouteQuery();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_DriveRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int__java_util_List_com_amap_api_services_core_LatLonPoint___java_util_List_java_util_List_com_amap_api_services_core_LatLonPoint____String", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_DriveRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int__java_util_List_com_amap_api_services_core_LatLonPoint___java_util_List_java_util_List_com_amap_api_services_core_LatLonPoint____String");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.services.route.RouteSearch.FromAndTo var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(__var1__) : null;
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // list arg
                List<Integer> var3RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var3");
                java.util.List<com.amap.api.services.core.LatLonPoint> var3 = new ArrayList<>();
                for (int refId : var3RefIdList) {
                    ((ArrayList<com.amap.api.services.core.LatLonPoint>) var3).add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
                }
                java.util.List<java.util.List<com.amap.api.services.core.LatLonPoint>> var4 = new ArrayList<>();
                // jsonable arg
                String var5 = (String) ((Map<String, Object>) __args__).get("var5");
            
                // create target object
                com.amap.api.services.route.RouteSearch.DriveRouteQuery __obj__ = new com.amap.api.services.route.RouteSearch.DriveRouteQuery(var1, var2, (ArrayList) var3, (ArrayList) var4, var5);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_DriveRouteQuery__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_DriveRouteQuery__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.RouteSearch.DriveRouteQuery __obj__ = new com.amap.api.services.route.RouteSearch.DriveRouteQuery();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteRailwayItem__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteRailwayItem__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.RouteRailwayItem __obj__ = new com.amap.api.services.route.RouteRailwayItem();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_WalkStep__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_WalkStep__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.WalkStep __obj__ = new com.amap.api.services.route.WalkStep();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RailwayStationItem__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RailwayStationItem__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.RailwayStationItem __obj__ = new com.amap.api.services.route.RailwayStationItem();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RideRouteResult__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RideRouteResult__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.RideRouteResult __obj__ = new com.amap.api.services.route.RideRouteResult();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_FromAndTo__com_amap_api_services_core_LatLonPoint__com_amap_api_services_core_LatLonPoint", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_FromAndTo__com_amap_api_services_core_LatLonPoint__com_amap_api_services_core_LatLonPoint");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.services.core.LatLonPoint var1 = __var1__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var1__) : null;
                // ref arg
                Integer __var2__ = (Integer) ((Map<String, Object>) __args__).get("var2");
                com.amap.api.services.core.LatLonPoint var2 = __var2__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var2__) : null;
            
                // create target object
                com.amap.api.services.route.RouteSearch.FromAndTo __obj__ = new com.amap.api.services.route.RouteSearch.FromAndTo(var1, var2);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_FromAndTo__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_FromAndTo__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.RouteSearch.FromAndTo __obj__ = new com.amap.api.services.route.RouteSearch.FromAndTo();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RidePath__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RidePath__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.RidePath __obj__ = new com.amap.api.services.route.RidePath();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_BusRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int__String__int", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_BusRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int__String__int");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.services.route.RouteSearch.FromAndTo var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(__var1__) : null;
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) __args__).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) __args__).get("var4");
            
                // create target object
                com.amap.api.services.route.RouteSearch.BusRouteQuery __obj__ = new com.amap.api.services.route.RouteSearch.BusRouteQuery(var1, var2, var3, var4);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_BusRouteQuery__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_BusRouteQuery__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.RouteSearch.BusRouteQuery __obj__ = new com.amap.api.services.route.RouteSearch.BusRouteQuery();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RideStep__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RideStep__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.RideStep __obj__ = new com.amap.api.services.route.RideStep();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteSearchCity__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearchCity__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.RouteSearchCity __obj__ = new com.amap.api.services.route.RouteSearchCity();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_DistanceResult__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DistanceResult__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.DistanceResult __obj__ = new com.amap.api.services.route.DistanceResult();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_WalkRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_WalkRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.services.route.RouteSearch.FromAndTo var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(__var1__) : null;
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
            
                // create target object
                com.amap.api.services.route.RouteSearch.WalkRouteQuery __obj__ = new com.amap.api.services.route.RouteSearch.WalkRouteQuery(var1, var2);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_WalkRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_WalkRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.services.route.RouteSearch.FromAndTo var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(__var1__) : null;
            
                // create target object
                com.amap.api.services.route.RouteSearch.WalkRouteQuery __obj__ = new com.amap.api.services.route.RouteSearch.WalkRouteQuery(var1);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_WalkRouteQuery__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_WalkRouteQuery__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.RouteSearch.WalkRouteQuery __obj__ = new com.amap.api.services.route.RouteSearch.WalkRouteQuery();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_District__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_District__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.District __obj__ = new com.amap.api.services.route.District();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_WalkRouteResult__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_WalkRouteResult__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.WalkRouteResult __obj__ = new com.amap.api.services.route.WalkRouteResult();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_DistanceSearch_DistanceQuery__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DistanceSearch_DistanceQuery__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.DistanceSearch.DistanceQuery __obj__ = new com.amap.api.services.route.DistanceSearch.DistanceQuery();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_SearchCity__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_SearchCity__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.SearchCity __obj__ = new com.amap.api.services.route.SearchCity();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_DistanceSearch__android_content_Context", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DistanceSearch__android_content_Context");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1__ != null ? (android.content.Context) getHEAP().get(__var1__) : null;
            
                // create target object
                com.amap.api.services.route.DistanceSearch __obj__ = new com.amap.api.services.route.DistanceSearch(var1);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_WalkPath__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_WalkPath__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.WalkPath __obj__ = new com.amap.api.services.route.WalkPath();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteBusLineItem__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteBusLineItem__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.RouteBusLineItem __obj__ = new com.amap.api.services.route.RouteBusLineItem();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_DrivePlanQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int__int__int", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_DrivePlanQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int__int__int");
                }
            
                // args
                // ref arg
                Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.services.route.RouteSearch.FromAndTo var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(__var1__) : null;
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) __args__).get("var4");
            
                // create target object
                com.amap.api.services.route.RouteSearch.DrivePlanQuery __obj__ = new com.amap.api.services.route.RouteSearch.DrivePlanQuery(var1, var2, var3, var4);
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_DrivePlanQuery__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_DrivePlanQuery__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.RouteSearch.DrivePlanQuery __obj__ = new com.amap.api.services.route.RouteSearch.DrivePlanQuery();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_DrivePlanStep__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DrivePlanStep__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.DrivePlanStep __obj__ = new com.amap.api.services.route.DrivePlanStep();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_TimeInfo__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_TimeInfo__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.TimeInfo __obj__ = new com.amap.api.services.route.TimeInfo();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_DriveStep__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DriveStep__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.DriveStep __obj__ = new com.amap.api.services.route.DriveStep();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_TruckStep__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_TruckStep__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.TruckStep __obj__ = new com.amap.api.services.route.TruckStep();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_DriveRouteResult__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DriveRouteResult__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.DriveRouteResult __obj__ = new com.amap.api.services.route.DriveRouteResult();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_DrivePath__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DrivePath__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.DrivePath __obj__ = new com.amap.api.services.route.DrivePath();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_TruckPath__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_TruckPath__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.TruckPath __obj__ = new com.amap.api.services.route.TruckPath();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_Doorway__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_Doorway__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.Doorway __obj__ = new com.amap.api.services.route.Doorway();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
            // factory
            put("ObjectFactory::createcom_amap_api_services_route_DrivePlanPath__", (__args__, __methodResult__) -> {
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DrivePlanPath__");
                }
            
                // args
            
            
                // create target object
                com.amap.api.services.route.DrivePlanPath __obj__ = new com.amap.api.services.route.DrivePlanPath();
                getHEAP().put(System.identityHashCode(__obj__), __obj__);
            
                // print current HEAP
                if (getEnableLog()) {
                    Log.d("ObjectFactory", "HEAP: " + getHEAP());
                }
            
                __methodResult__.success(System.identityHashCode(__obj__));
            });
        }};
    }
}
