//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package me.yohom.amap_search_fluttify.sub_handler;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.platform.PlatformViewRegistry;

import me.yohom.amap_search_fluttify.AmapSearchFluttifyPlugin.Handler;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class SubHandler7 {
    public static Map<String, Handler> getSubHandler(BinaryMessenger messenger) {
        return new HashMap<String, Handler>() {{
            // method
            put("com.amap.api.services.core.PoiItem::getProvinceCode_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getProvinceCode();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setParkingType_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setParkingType(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getParkingType_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getParkingType();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setSubPois_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // list arg
                    List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                    java.util.List<com.amap.api.services.poisearch.SubPoiItem> var1 = new ArrayList<>();
                    for (int refId : var1RefIdList) {
                        ((ArrayList<com.amap.api.services.poisearch.SubPoiItem>) var1).add((com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId));
                    }
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setSubPois((ArrayList) var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getSubPois_batch", (__argsBatch__, __methodResult__) -> {
                List<List<Integer>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    java.util.List<com.amap.api.services.poisearch.SubPoiItem> __result__;
                    try {
                        __result__ = ref.getSubPois();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    List<Integer> jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = new ArrayList<>();
                        for (com.amap.api.services.poisearch.SubPoiItem item : __result__) {
                            getHEAP().put(System.identityHashCode(item), item);
                            jsonableResult.add(System.identityHashCode(item));
                        }
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getIndoorData_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.poisearch.IndoorData __result__;
                    try {
                        __result__ = ref.getIndoorData();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setIndoorDate_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.poisearch.IndoorData var1 = __var1__ != null ? (com.amap.api.services.poisearch.IndoorData) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setIndoorDate(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getPhotos_batch", (__argsBatch__, __methodResult__) -> {
                List<List<Integer>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    java.util.List<com.amap.api.services.poisearch.Photo> __result__;
                    try {
                        __result__ = ref.getPhotos();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    List<Integer> jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = new ArrayList<>();
                        for (com.amap.api.services.poisearch.Photo item : __result__) {
                            getHEAP().put(System.identityHashCode(item), item);
                            jsonableResult.add(System.identityHashCode(item));
                        }
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setPhotos_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // list arg
                    List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                    java.util.List<com.amap.api.services.poisearch.Photo> var1 = new ArrayList<>();
                    for (int refId : var1RefIdList) {
                        ((ArrayList<com.amap.api.services.poisearch.Photo>) var1).add((com.amap.api.services.poisearch.Photo) getHEAP().get(refId));
                    }
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setPhotos((ArrayList) var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getPoiExtension_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.poisearch.PoiItemExtension __result__;
                    try {
                        __result__ = ref.getPoiExtension();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setPoiExtension_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.poisearch.PoiItemExtension var1 = __var1__ != null ? (com.amap.api.services.poisearch.PoiItemExtension) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setPoiExtension(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getTypeCode_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getTypeCode();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setTypeCode_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setTypeCode(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getShopID_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getShopID();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setShopID_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setShopID(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.SuggestionCity::getCityName_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.SuggestionCity ref = (com.amap.api.services.core.SuggestionCity) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getCityName();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.SuggestionCity::setCityName_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.SuggestionCity ref = (com.amap.api.services.core.SuggestionCity) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setCityName(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.SuggestionCity::getCityCode_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.SuggestionCity ref = (com.amap.api.services.core.SuggestionCity) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getCityCode();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.SuggestionCity::setCityCode_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.SuggestionCity ref = (com.amap.api.services.core.SuggestionCity) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setCityCode(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.SuggestionCity::getAdCode_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.SuggestionCity ref = (com.amap.api.services.core.SuggestionCity) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getAdCode();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.SuggestionCity::setAdCode_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.SuggestionCity ref = (com.amap.api.services.core.SuggestionCity) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setAdCode(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.SuggestionCity::getSuggestionNum_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.SuggestionCity ref = (com.amap.api.services.core.SuggestionCity) getHEAP().get(refId);
            
                    // invoke native method
                    int __result__;
                    try {
                        __result__ = ref.getSuggestionNum();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.core.SuggestionCity::setSuggestionNum_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.core.SuggestionCity ref = (com.amap.api.services.core.SuggestionCity) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setSuggestionNum(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.Photo::getTitle_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.Photo ref = (com.amap.api.services.poisearch.Photo) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getTitle();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.Photo::setTitle_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.Photo ref = (com.amap.api.services.poisearch.Photo) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setTitle(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.Photo::getUrl_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.Photo ref = (com.amap.api.services.poisearch.Photo) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getUrl();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.Photo::setUrl_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.Photo ref = (com.amap.api.services.poisearch.Photo) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setUrl(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.SubPoiItem::getPoiId_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getPoiId();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.SubPoiItem::setPoiId_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setPoiId(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.SubPoiItem::getTitle_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getTitle();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.SubPoiItem::setTitle_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setTitle(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.SubPoiItem::getSubName_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getSubName();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.SubPoiItem::setSubName_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setSubName(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.SubPoiItem::getDistance_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    int __result__;
                    try {
                        __result__ = ref.getDistance();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.SubPoiItem::setDistance_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setDistance(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.SubPoiItem::getLatLonPoint_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.core.LatLonPoint __result__;
                    try {
                        __result__ = ref.getLatLonPoint();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.SubPoiItem::setLatLonPoint_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.core.LatLonPoint var1 = __var1__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setLatLonPoint(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.SubPoiItem::getSnippet_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getSnippet();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.SubPoiItem::setSnippet_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setSnippet(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.SubPoiItem::getSubTypeDes_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getSubTypeDes();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.SubPoiItem::setSubTypeDes_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setSubTypeDes(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiItemExtension::getOpentime_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiItemExtension ref = (com.amap.api.services.poisearch.PoiItemExtension) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getOpentime();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiItemExtension::getmRating_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiItemExtension ref = (com.amap.api.services.poisearch.PoiItemExtension) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getmRating();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.SearchBound::getLowerLeft_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.SearchBound ref = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.core.LatLonPoint __result__;
                    try {
                        __result__ = ref.getLowerLeft();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.SearchBound::getUpperRight_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.SearchBound ref = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.core.LatLonPoint __result__;
                    try {
                        __result__ = ref.getUpperRight();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.SearchBound::getCenter_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.SearchBound ref = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.core.LatLonPoint __result__;
                    try {
                        __result__ = ref.getCenter();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.SearchBound::getRange_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.SearchBound ref = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get(refId);
            
                    // invoke native method
                    int __result__;
                    try {
                        __result__ = ref.getRange();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.SearchBound::getShape_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.SearchBound ref = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getShape();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.SearchBound::isDistanceSort_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.SearchBound ref = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get(refId);
            
                    // invoke native method
                    boolean __result__;
                    try {
                        __result__ = ref.isDistanceSort();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.SearchBound::getPolyGonList_batch", (__argsBatch__, __methodResult__) -> {
                List<List<Integer>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.SearchBound ref = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get(refId);
            
                    // invoke native method
                    java.util.List<com.amap.api.services.core.LatLonPoint> __result__;
                    try {
                        __result__ = ref.getPolyGonList();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    List<Integer> jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = new ArrayList<>();
                        for (com.amap.api.services.core.LatLonPoint item : __result__) {
                            getHEAP().put(System.identityHashCode(item), item);
                            jsonableResult.add(System.identityHashCode(item));
                        }
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.SearchBound::clone_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.SearchBound ref = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.poisearch.PoiSearch.SearchBound __result__;
                    try {
                        __result__ = ref.clone();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiResult::createPagedResult_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var0__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                    com.amap.api.services.poisearch.PoiSearch.Query var0 = __var0__ != null ? (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(__var0__) : null;
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.poisearch.PoiSearch.SearchBound var1 = __var1__ != null ? (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get(__var1__) : null;
                    // jsonable arg
                    java.util.List<String> var2 = (java.util.List<String>) ((Map<String, Object>) __args__).get("var2");
                    // list arg
                    List<Integer> var3RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var3");
                    java.util.List<com.amap.api.services.core.SuggestionCity> var3 = new ArrayList<>();
                    for (int refId : var3RefIdList) {
                        ((ArrayList<com.amap.api.services.core.SuggestionCity>) var3).add((com.amap.api.services.core.SuggestionCity) getHEAP().get(refId));
                    }
                    // jsonable arg
                    int var4 = (int) ((Map<String, Object>) __args__).get("var4");
                    // jsonable arg
                    int var5 = (int) ((Map<String, Object>) __args__).get("var5");
                    // list arg
                    List<Integer> var6RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var6");
                    java.util.ArrayList<com.amap.api.services.core.PoiItem> var6 = new ArrayList<>();
                    for (int refId : var6RefIdList) {
                        ((ArrayList<com.amap.api.services.core.PoiItem>) var6).add((com.amap.api.services.core.PoiItem) getHEAP().get(refId));
                    }
            
                    // ref
            
            
                    // invoke native method
                    com.amap.api.services.poisearch.PoiResult __result__;
                    try {
                        __result__ = com.amap.api.services.poisearch.PoiResult.createPagedResult(var0, var1, (ArrayList) var2, (ArrayList) var3, var4, var5, (ArrayList) var6);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiResult::getPageCount_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiResult ref = (com.amap.api.services.poisearch.PoiResult) getHEAP().get(refId);
            
                    // invoke native method
                    int __result__;
                    try {
                        __result__ = ref.getPageCount();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiResult::getQuery_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiResult ref = (com.amap.api.services.poisearch.PoiResult) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.poisearch.PoiSearch.Query __result__;
                    try {
                        __result__ = ref.getQuery();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiResult::getBound_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiResult ref = (com.amap.api.services.poisearch.PoiResult) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.poisearch.PoiSearch.SearchBound __result__;
                    try {
                        __result__ = ref.getBound();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiResult::getPois_batch", (__argsBatch__, __methodResult__) -> {
                List<List<Integer>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiResult ref = (com.amap.api.services.poisearch.PoiResult) getHEAP().get(refId);
            
                    // invoke native method
                    java.util.ArrayList<com.amap.api.services.core.PoiItem> __result__;
                    try {
                        __result__ = ref.getPois();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    List<Integer> jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = new ArrayList<>();
                        for (com.amap.api.services.core.PoiItem item : __result__) {
                            getHEAP().put(System.identityHashCode(item), item);
                            jsonableResult.add(System.identityHashCode(item));
                        }
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiResult::getSearchSuggestionKeywords_batch", (__argsBatch__, __methodResult__) -> {
                List<java.util.List<String>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiResult ref = (com.amap.api.services.poisearch.PoiResult) getHEAP().get(refId);
            
                    // invoke native method
                    java.util.List<String> __result__;
                    try {
                        __result__ = ref.getSearchSuggestionKeywords();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    java.util.List<String> jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiResult::getSearchSuggestionCitys_batch", (__argsBatch__, __methodResult__) -> {
                List<List<Integer>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiResult ref = (com.amap.api.services.poisearch.PoiResult) getHEAP().get(refId);
            
                    // invoke native method
                    java.util.List<com.amap.api.services.core.SuggestionCity> __result__;
                    try {
                        __result__ = ref.getSearchSuggestionCitys();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    List<Integer> jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = new ArrayList<>();
                        for (com.amap.api.services.core.SuggestionCity item : __result__) {
                            getHEAP().put(System.identityHashCode(item), item);
                            jsonableResult.add(System.identityHashCode(item));
                        }
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch::setLanguage_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setLanguage(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch::getLanguage_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getLanguage();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch::searchPOI_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.poisearch.PoiResult __result__;
                    try {
                        __result__ = ref.searchPOI();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch::searchPOIAsyn_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.searchPOIAsyn();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch::searchPOIId_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.core.PoiItem __result__;
                    try {
                        __result__ = ref.searchPOIId(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch::searchPOIIdAsyn_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.searchPOIIdAsyn(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch::setQuery_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.poisearch.PoiSearch.Query var1 = __var1__ != null ? (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setQuery(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch::setBound_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.poisearch.PoiSearch.SearchBound var1 = __var1__ != null ? (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setBound(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch::getQuery_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.poisearch.PoiSearch.Query __result__;
                    try {
                        __result__ = ref.getQuery();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch::getBound_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.poisearch.PoiSearch.SearchBound __result__;
                    try {
                        __result__ = ref.getBound();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::getBuilding_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getBuilding();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::setBuilding_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setBuilding(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::getQueryString_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getQueryString();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::setQueryLanguage_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setQueryLanguage(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::getCategory_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getCategory();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::getCity_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getCity();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::getPageNum_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    int __result__;
                    try {
                        __result__ = ref.getPageNum();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::setPageNum_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setPageNum(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::setPageSize_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setPageSize(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::getPageSize_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    int __result__;
                    try {
                        __result__ = ref.getPageSize();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::setCityLimit_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setCityLimit(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::getCityLimit_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    boolean __result__;
                    try {
                        __result__ = ref.getCityLimit();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::requireSubPois_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.requireSubPois(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::isRequireSubPois_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    boolean __result__;
                    try {
                        __result__ = ref.isRequireSubPois();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::isDistanceSort_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    boolean __result__;
                    try {
                        __result__ = ref.isDistanceSort();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::setDistanceSort_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setDistanceSort(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::getLocation_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.core.LatLonPoint __result__;
                    try {
                        __result__ = ref.getLocation();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::setLocation_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.core.LatLonPoint var1 = __var1__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setLocation(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::queryEquals_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.poisearch.PoiSearch.Query var1 = __var1__ != null ? (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    boolean __result__;
                    try {
                        __result__ = ref.queryEquals(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.PoiSearch.Query::clone_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.poisearch.PoiSearch.Query __result__;
                    try {
                        __result__ = ref.clone();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.IndoorData::getPoiId_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.IndoorData ref = (com.amap.api.services.poisearch.IndoorData) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getPoiId();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.IndoorData::setPoiId_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.IndoorData ref = (com.amap.api.services.poisearch.IndoorData) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setPoiId(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.IndoorData::getFloor_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.IndoorData ref = (com.amap.api.services.poisearch.IndoorData) getHEAP().get(refId);
            
                    // invoke native method
                    int __result__;
                    try {
                        __result__ = ref.getFloor();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.IndoorData::setFloor_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.IndoorData ref = (com.amap.api.services.poisearch.IndoorData) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setFloor(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.IndoorData::getFloorName_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.IndoorData ref = (com.amap.api.services.poisearch.IndoorData) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getFloorName();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.poisearch.IndoorData::setFloorName_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.poisearch.IndoorData ref = (com.amap.api.services.poisearch.IndoorData) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setFloorName(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.Railway::getID_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.Railway ref = (com.amap.api.services.route.Railway) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getID();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.Railway::getName_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.Railway ref = (com.amap.api.services.route.Railway) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getName();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.Railway::setID_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.Railway ref = (com.amap.api.services.route.Railway) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setID(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.Railway::setName_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.Railway ref = (com.amap.api.services.route.Railway) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setName(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusPath::getCost_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
            
                    // invoke native method
                    float __result__;
                    try {
                        __result__ = ref.getCost();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusPath::setCost_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setCost(new Double(var1).floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusPath::isNightBus_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
            
                    // invoke native method
                    boolean __result__;
                    try {
                        __result__ = ref.isNightBus();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusPath::setNightBus_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setNightBus(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusPath::getWalkDistance_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
            
                    // invoke native method
                    float __result__;
                    try {
                        __result__ = ref.getWalkDistance();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusPath::setWalkDistance_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setWalkDistance(new Double(var1).floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusPath::getBusDistance_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
            
                    // invoke native method
                    float __result__;
                    try {
                        __result__ = ref.getBusDistance();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusPath::setBusDistance_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setBusDistance(new Double(var1).floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusPath::getSteps_batch", (__argsBatch__, __methodResult__) -> {
                List<List<Integer>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
            
                    // invoke native method
                    java.util.List<com.amap.api.services.route.BusStep> __result__;
                    try {
                        __result__ = ref.getSteps();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    List<Integer> jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = new ArrayList<>();
                        for (com.amap.api.services.route.BusStep item : __result__) {
                            getHEAP().put(System.identityHashCode(item), item);
                            jsonableResult.add(System.identityHashCode(item));
                        }
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusPath::setSteps_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // list arg
                    List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                    java.util.List<com.amap.api.services.route.BusStep> var1 = new ArrayList<>();
                    for (int refId : var1RefIdList) {
                        ((ArrayList<com.amap.api.services.route.BusStep>) var1).add((com.amap.api.services.route.BusStep) getHEAP().get(refId));
                    }
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setSteps((ArrayList) var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.DriveRoutePlanResult::getPaths_batch", (__argsBatch__, __methodResult__) -> {
                List<List<Integer>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.DriveRoutePlanResult ref = (com.amap.api.services.route.DriveRoutePlanResult) getHEAP().get(refId);
            
                    // invoke native method
                    java.util.List<com.amap.api.services.route.DrivePlanPath> __result__;
                    try {
                        __result__ = ref.getPaths();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    List<Integer> jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = new ArrayList<>();
                        for (com.amap.api.services.route.DrivePlanPath item : __result__) {
                            getHEAP().put(System.identityHashCode(item), item);
                            jsonableResult.add(System.identityHashCode(item));
                        }
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.DriveRoutePlanResult::setPaths_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // list arg
                    List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                    java.util.List<com.amap.api.services.route.DrivePlanPath> var1 = new ArrayList<>();
                    for (int refId : var1RefIdList) {
                        ((ArrayList<com.amap.api.services.route.DrivePlanPath>) var1).add((com.amap.api.services.route.DrivePlanPath) getHEAP().get(refId));
                    }
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.DriveRoutePlanResult ref = (com.amap.api.services.route.DriveRoutePlanResult) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setPaths((ArrayList) var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.DriveRoutePlanResult::getTimeInfos_batch", (__argsBatch__, __methodResult__) -> {
                List<List<Integer>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.DriveRoutePlanResult ref = (com.amap.api.services.route.DriveRoutePlanResult) getHEAP().get(refId);
            
                    // invoke native method
                    java.util.List<com.amap.api.services.route.TimeInfo> __result__;
                    try {
                        __result__ = ref.getTimeInfos();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    List<Integer> jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = new ArrayList<>();
                        for (com.amap.api.services.route.TimeInfo item : __result__) {
                            getHEAP().put(System.identityHashCode(item), item);
                            jsonableResult.add(System.identityHashCode(item));
                        }
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.DriveRoutePlanResult::setTimeInfos_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // list arg
                    List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                    java.util.List<com.amap.api.services.route.TimeInfo> var1 = new ArrayList<>();
                    for (int refId : var1RefIdList) {
                        ((ArrayList<com.amap.api.services.route.TimeInfo>) var1).add((com.amap.api.services.route.TimeInfo) getHEAP().get(refId));
                    }
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.DriveRoutePlanResult ref = (com.amap.api.services.route.DriveRoutePlanResult) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setTimeInfos((ArrayList) var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.DriveRoutePlanResult::setDrivePlanQuery_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.RouteSearch.DrivePlanQuery var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.DriveRoutePlanResult ref = (com.amap.api.services.route.DriveRoutePlanResult) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setDrivePlanQuery(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::setMode_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setMode(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::setTruckSize_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setTruckSize(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::setTruckHeight_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setTruckHeight(new Double(var1).floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::setTruckWidth_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setTruckWidth(new Double(var1).floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::setTruckLoad_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setTruckLoad(new Double(var1).floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::setTruckWeight_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setTruckWeight(new Double(var1).floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::setTruckAxis_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setTruckAxis(new Double(var1).floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::getFromAndTo_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.route.RouteSearch.FromAndTo __result__;
                    try {
                        __result__ = ref.getFromAndTo();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::getMode_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
            
                    // invoke native method
                    int __result__;
                    try {
                        __result__ = ref.getMode();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::hasPassPoint_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
            
                    // invoke native method
                    boolean __result__;
                    try {
                        __result__ = ref.hasPassPoint();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::getPassedPointStr_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getPassedPointStr();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::getTruckSize_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
            
                    // invoke native method
                    int __result__;
                    try {
                        __result__ = ref.getTruckSize();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::getTruckHeight_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
            
                    // invoke native method
                    float __result__;
                    try {
                        __result__ = ref.getTruckHeight();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::getTruckWidth_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
            
                    // invoke native method
                    float __result__;
                    try {
                        __result__ = ref.getTruckWidth();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::getTruckLoad_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
            
                    // invoke native method
                    float __result__;
                    try {
                        __result__ = ref.getTruckLoad();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::getTruckWeight_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
            
                    // invoke native method
                    float __result__;
                    try {
                        __result__ = ref.getTruckWeight();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::getTruckAxis_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
            
                    // invoke native method
                    float __result__;
                    try {
                        __result__ = ref.getTruckAxis();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::clone_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery __result__;
                    try {
                        __result__ = ref.clone();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TMC::getDistance_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TMC ref = (com.amap.api.services.route.TMC) getHEAP().get(refId);
            
                    // invoke native method
                    int __result__;
                    try {
                        __result__ = ref.getDistance();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TMC::getStatus_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TMC ref = (com.amap.api.services.route.TMC) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getStatus();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TMC::setDistance_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TMC ref = (com.amap.api.services.route.TMC) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setDistance(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TMC::setStatus_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TMC ref = (com.amap.api.services.route.TMC) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setStatus(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TMC::getPolyline_batch", (__argsBatch__, __methodResult__) -> {
                List<List<Integer>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TMC ref = (com.amap.api.services.route.TMC) getHEAP().get(refId);
            
                    // invoke native method
                    java.util.List<com.amap.api.services.core.LatLonPoint> __result__;
                    try {
                        __result__ = ref.getPolyline();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    List<Integer> jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = new ArrayList<>();
                        for (com.amap.api.services.core.LatLonPoint item : __result__) {
                            getHEAP().put(System.identityHashCode(item), item);
                            jsonableResult.add(System.identityHashCode(item));
                        }
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TMC::setPolyline_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // list arg
                    List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                    java.util.List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
                    for (int refId : var1RefIdList) {
                        ((ArrayList<com.amap.api.services.core.LatLonPoint>) var1).add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
                    }
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TMC ref = (com.amap.api.services.route.TMC) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setPolyline((ArrayList) var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteBusWalkItem::getOrigin_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteBusWalkItem ref = (com.amap.api.services.route.RouteBusWalkItem) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.core.LatLonPoint __result__;
                    try {
                        __result__ = ref.getOrigin();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteBusWalkItem::setOrigin_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.core.LatLonPoint var1 = __var1__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteBusWalkItem ref = (com.amap.api.services.route.RouteBusWalkItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setOrigin(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteBusWalkItem::getDestination_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteBusWalkItem ref = (com.amap.api.services.route.RouteBusWalkItem) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.core.LatLonPoint __result__;
                    try {
                        __result__ = ref.getDestination();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteBusWalkItem::setDestination_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.core.LatLonPoint var1 = __var1__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteBusWalkItem ref = (com.amap.api.services.route.RouteBusWalkItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setDestination(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteResult::getStartPos_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteResult ref = (com.amap.api.services.route.RouteResult) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.core.LatLonPoint __result__;
                    try {
                        __result__ = ref.getStartPos();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteResult::setStartPos_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.core.LatLonPoint var1 = __var1__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteResult ref = (com.amap.api.services.route.RouteResult) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setStartPos(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteResult::getTargetPos_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteResult ref = (com.amap.api.services.route.RouteResult) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.core.LatLonPoint __result__;
                    try {
                        __result__ = ref.getTargetPos();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteResult::setTargetPos_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.core.LatLonPoint var1 = __var1__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteResult ref = (com.amap.api.services.route.RouteResult) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setTargetPos(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch::calculateWalkRoute_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.RouteSearch.WalkRouteQuery var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.WalkRouteQuery) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.route.WalkRouteResult __result__;
                    try {
                        __result__ = ref.calculateWalkRoute(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch::calculateWalkRouteAsyn_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.RouteSearch.WalkRouteQuery var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.WalkRouteQuery) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.calculateWalkRouteAsyn(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch::calculateBusRoute_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.RouteSearch.BusRouteQuery var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.BusRouteQuery) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.route.BusRouteResult __result__;
                    try {
                        __result__ = ref.calculateBusRoute(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch::calculateBusRouteAsyn_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.RouteSearch.BusRouteQuery var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.BusRouteQuery) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.calculateBusRouteAsyn(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch::calculateDriveRoute_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.RouteSearch.DriveRouteQuery var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.route.DriveRouteResult __result__;
                    try {
                        __result__ = ref.calculateDriveRoute(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch::calculateDriveRouteAsyn_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.RouteSearch.DriveRouteQuery var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.calculateDriveRouteAsyn(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch::calculateRideRouteAsyn_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.RouteSearch.RideRouteQuery var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.RideRouteQuery) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.calculateRideRouteAsyn(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch::calculateRideRoute_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.RouteSearch.RideRouteQuery var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.RideRouteQuery) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.route.RideRouteResult __result__;
                    try {
                        __result__ = ref.calculateRideRoute(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch::calculateTruckRoute_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.route.TruckRouteRestult __result__;
                    try {
                        __result__ = ref.calculateTruckRoute(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch::calculateTruckRouteAsyn_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.calculateTruckRouteAsyn(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch::calculateDrivePlan_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.RouteSearch.DrivePlanQuery var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.route.DriveRoutePlanResult __result__;
                    try {
                        __result__ = ref.calculateDrivePlan(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RouteSearch::calculateDrivePlanAsyn_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.RouteSearch.DrivePlanQuery var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.calculateDrivePlanAsyn(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusStep::getWalk_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.route.RouteBusWalkItem __result__;
                    try {
                        __result__ = ref.getWalk();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusStep::setWalk_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.RouteBusWalkItem var1 = __var1__ != null ? (com.amap.api.services.route.RouteBusWalkItem) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setWalk(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusStep::getBusLine_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.route.RouteBusLineItem __result__;
                    try {
                        __result__ = ref.getBusLine();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusStep::getBusLines_batch", (__argsBatch__, __methodResult__) -> {
                List<List<Integer>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
            
                    // invoke native method
                    java.util.List<com.amap.api.services.route.RouteBusLineItem> __result__;
                    try {
                        __result__ = ref.getBusLines();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    List<Integer> jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = new ArrayList<>();
                        for (com.amap.api.services.route.RouteBusLineItem item : __result__) {
                            getHEAP().put(System.identityHashCode(item), item);
                            jsonableResult.add(System.identityHashCode(item));
                        }
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusStep::setBusLine_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.RouteBusLineItem var1 = __var1__ != null ? (com.amap.api.services.route.RouteBusLineItem) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setBusLine(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusStep::setBusLines_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // list arg
                    List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                    java.util.List<com.amap.api.services.route.RouteBusLineItem> var1 = new ArrayList<>();
                    for (int refId : var1RefIdList) {
                        ((ArrayList<com.amap.api.services.route.RouteBusLineItem>) var1).add((com.amap.api.services.route.RouteBusLineItem) getHEAP().get(refId));
                    }
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setBusLines((ArrayList) var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusStep::getEntrance_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.route.Doorway __result__;
                    try {
                        __result__ = ref.getEntrance();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusStep::setEntrance_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.Doorway var1 = __var1__ != null ? (com.amap.api.services.route.Doorway) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setEntrance(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusStep::getExit_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.route.Doorway __result__;
                    try {
                        __result__ = ref.getExit();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusStep::setExit_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.Doorway var1 = __var1__ != null ? (com.amap.api.services.route.Doorway) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setExit(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusStep::getRailway_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.route.RouteRailwayItem __result__;
                    try {
                        __result__ = ref.getRailway();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusStep::setRailway_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.RouteRailwayItem var1 = __var1__ != null ? (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setRailway(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusStep::getTaxi_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.route.TaxiItem __result__;
                    try {
                        __result__ = ref.getTaxi();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusStep::setTaxi_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.TaxiItem var1 = __var1__ != null ? (com.amap.api.services.route.TaxiItem) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setTaxi(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TaxiItem::getOrigin_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.core.LatLonPoint __result__;
                    try {
                        __result__ = ref.getOrigin();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TaxiItem::getDestination_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.core.LatLonPoint __result__;
                    try {
                        __result__ = ref.getDestination();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TaxiItem::getDistance_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
            
                    // invoke native method
                    float __result__;
                    try {
                        __result__ = ref.getDistance();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TaxiItem::getDuration_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
            
                    // invoke native method
                    float __result__;
                    try {
                        __result__ = ref.getDuration();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TaxiItem::getmSname_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getmSname();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TaxiItem::getmTname_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getmTname();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TaxiItem::setOrigin_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.core.LatLonPoint var1 = __var1__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setOrigin(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TaxiItem::setDestination_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.core.LatLonPoint var1 = __var1__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setDestination(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TaxiItem::setDistance_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setDistance(new Double(var1).floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TaxiItem::setDuration_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setDuration(new Double(var1).floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TaxiItem::setSname_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setSname(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TaxiItem::setTname_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setTname(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusRouteResult::getTaxiCost_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusRouteResult ref = (com.amap.api.services.route.BusRouteResult) getHEAP().get(refId);
            
                    // invoke native method
                    float __result__;
                    try {
                        __result__ = ref.getTaxiCost();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusRouteResult::setTaxiCost_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // jsonable arg
                    Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusRouteResult ref = (com.amap.api.services.route.BusRouteResult) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setTaxiCost(new Double(var1).floatValue());
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusRouteResult::getPaths_batch", (__argsBatch__, __methodResult__) -> {
                List<List<Integer>> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusRouteResult ref = (com.amap.api.services.route.BusRouteResult) getHEAP().get(refId);
            
                    // invoke native method
                    java.util.List<com.amap.api.services.route.BusPath> __result__;
                    try {
                        __result__ = ref.getPaths();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    List<Integer> jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = new ArrayList<>();
                        for (com.amap.api.services.route.BusPath item : __result__) {
                            getHEAP().put(System.identityHashCode(item), item);
                            jsonableResult.add(System.identityHashCode(item));
                        }
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusRouteResult::setPaths_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // list arg
                    List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                    java.util.List<com.amap.api.services.route.BusPath> var1 = new ArrayList<>();
                    for (int refId : var1RefIdList) {
                        ((ArrayList<com.amap.api.services.route.BusPath>) var1).add((com.amap.api.services.route.BusPath) getHEAP().get(refId));
                    }
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusRouteResult ref = (com.amap.api.services.route.BusRouteResult) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setPaths((ArrayList) var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusRouteResult::getBusQuery_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusRouteResult ref = (com.amap.api.services.route.BusRouteResult) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.route.RouteSearch.BusRouteQuery __result__;
                    try {
                        __result__ = ref.getBusQuery();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.BusRouteResult::setBusQuery_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.RouteSearch.BusRouteQuery var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.BusRouteQuery) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.BusRouteResult ref = (com.amap.api.services.route.BusRouteResult) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setBusQuery(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RoutePlanResult::getStartPos_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RoutePlanResult ref = (com.amap.api.services.route.RoutePlanResult) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.core.LatLonPoint __result__;
                    try {
                        __result__ = ref.getStartPos();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RoutePlanResult::setStartPos_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.core.LatLonPoint var1 = __var1__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RoutePlanResult ref = (com.amap.api.services.route.RoutePlanResult) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setStartPos(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RoutePlanResult::getTargetPos_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RoutePlanResult ref = (com.amap.api.services.route.RoutePlanResult) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.core.LatLonPoint __result__;
                    try {
                        __result__ = ref.getTargetPos();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RoutePlanResult::setTargetPos_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.core.LatLonPoint var1 = __var1__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RoutePlanResult ref = (com.amap.api.services.route.RoutePlanResult) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setTargetPos(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RailwaySpace::getCode_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RailwaySpace ref = (com.amap.api.services.route.RailwaySpace) getHEAP().get(refId);
            
                    // invoke native method
                    String __result__;
                    try {
                        __result__ = ref.getCode();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.RailwaySpace::getCost_batch", (__argsBatch__, __methodResult__) -> {
                List<Float> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.RailwaySpace ref = (com.amap.api.services.route.RailwaySpace) getHEAP().get(refId);
            
                    // invoke native method
                    float __result__;
                    try {
                        __result__ = ref.getCost();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    float jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TruckRouteRestult::setTruckQuery_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery var1 = __var1__ != null ? (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TruckRouteRestult ref = (com.amap.api.services.route.TruckRouteRestult) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setTruckQuery(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TruckRouteRestult::setPaths_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // list arg
                    List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                    java.util.List<com.amap.api.services.route.TruckPath> var1 = new ArrayList<>();
                    for (int refId : var1RefIdList) {
                        ((ArrayList<com.amap.api.services.route.TruckPath>) var1).add((com.amap.api.services.route.TruckPath) getHEAP().get(refId));
                    }
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TruckRouteRestult ref = (com.amap.api.services.route.TruckRouteRestult) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setPaths((ArrayList) var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TruckRouteRestult::setStartPos_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.core.LatLonPoint var1 = __var1__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TruckRouteRestult ref = (com.amap.api.services.route.TruckRouteRestult) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setStartPos(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TruckRouteRestult::setTargetPos_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
                    // ref arg
                    Integer __var1__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                    com.amap.api.services.core.LatLonPoint var1 = __var1__ != null ? (com.amap.api.services.core.LatLonPoint) getHEAP().get(__var1__) : null;
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TruckRouteRestult ref = (com.amap.api.services.route.TruckRouteRestult) getHEAP().get(refId);
            
                    // invoke native method
                    try {
                        ref.setTargetPos(var1);
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    String jsonableResult = "success";
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // method
            put("com.amap.api.services.route.TruckRouteRestult::getTruckQuery_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // args
            
            
                    // ref
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    com.amap.api.services.route.TruckRouteRestult ref = (com.amap.api.services.route.TruckRouteRestult) getHEAP().get(refId);
            
                    // invoke native method
                    com.amap.api.services.route.RouteSearch.TruckRouteQuery __result__;
                    try {
                        __result__ = ref.getTruckQuery();
                    } catch (Throwable throwable) {
                        throwable.printStackTrace();
                        if (getEnableLog()) {
                            Log.d("Current HEAP: ", getHEAP().toString());
                        }
                        __methodResult__.error(throwable.getMessage(), null, null);
                        return;
                    }
            
                    // convert result to jsonable result
                    Integer jsonableResult = null;
                    if (__result__ != null) {
                        jsonableResult = System.identityHashCode(__result__);
                        getHEAP().put(jsonableResult, __result__);
                    }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
        }};
    }
}
